# Задание-1:
# Написать программу, выполняющую операции (сложение и вычитание) с простыми дробями.
# Дроби вводятся и выводятся в формате:
# n x/y ,где n - целая часть, x - числитель, у - знаменатель.
# Дроби могут быть отрицательные и не иметь целой части, или иметь только целую часть.
# Примеры:
# Ввод: 5/6 + 4/7 (всё выражение вводится целиком в виде строки)
# Вывод: 1 17/42  (результат обязательно упростить и выделить целую часть)
# Ввод: -2/3 - -2
# Вывод: 1 1/3

from fractions import Fraction


def fract(string):
	string = str(string).split(' ')
	num1 = Fraction(*list(map(int, string[0].split('/'))))
	num2 = Fraction(*list(map(int, string[-1].split('/'))))
	if string[1] is '+':
		res = num1 + num2
	elif string[1] is '*':
		res = num1 * num2
	elif string[1] is '/':
		res = num1 / num2
	elif string[1] is '-':
		res = num1 - num2
	else:
		return 'В выражении отсутствует знак операции'
	print(res)
	if res > 1:
		res = str(res).split('/')
		main = int(res[0]) // int(res[1])
		sub = int(res[0]) % int(res[1])
		return '{} {}/{}'.format(main, sub, res[1])
	else:
		return res


print(fract('5/6 + 4/6'))


# Задание-2:
# Дана ведомость расчета заработной платы (файл "data/workers.txt").
# Рассчитайте зарплату всех работников, зная что они получат полный оклад,
# если отработают норму часов. Если же они отработали меньше нормы,
# то их ЗП уменьшается пропорционально, а за заждый час переработки
# они получают удвоенную ЗП, пропорциональную норме.
# Кол-во часов, которые были отработаны, указаны в файле "data/hours_of.txt"

with open('data/workers.txt', encoding='utf-8') as w:
	w_lines = [' '.join(line.split()) for line in w]
	with open('data/hours_of.txt', encoding='utf-8') as h:
		h_lines = [' '.join(line.split()) for line in h]
		del h_lines[0]
		del w_lines[0]
		print(w_lines, h_lines)


print('    q      2    a    '.strip())

# Задание-3:
# Дан файл ("data/fruits") со списком фруктов.
# Записать в новые файлы все фрукты, начинающиеся с определенной буквы.
# Т.е. в одном файле будут все фрукты на букву “А”, во втором на “Б” и т.д.
# Файлы назвать соответственно.
# Пример имен файлов: fruits_А, fruits_Б, fruits_В ….
# Важно! Обратите внимание, что нет фруктов, начинающихся с некоторых букв.
# Напишите универсальный код, который будет работать с любым списком фруктов
# и распределять по файлам в зависимости от первых букв, имеющихся в списке фруктов.
# Подсказка:
# Чтобы получить список больших букв русского алфавита:
# print(list(map(chr, range(ord('А'), ord('Я')+1))))
